<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright 2013, The Android Open Source Project
**
** Licensed under the Apache License, Version 2.0 (the "License");
** you may not use this file except in compliance with the License.
** You may obtain a copy of the License at
**
**     http://www.apache.org/licenses/LICENSE-2.0
**
** Unless required by applicable law or agreed to in writing, software
** distributed under the License is distributed on an "AS IS" BASIS,
** WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
** See the License for the specific language governing permissions and
** limitations under the License.
*/
-->

<resources xmlns:xliff="urn:oasis:names:tc:xliff:document:1.2">

    <!-- Array of light sensor LUX values to define our levels for auto backlight brightness support.
         The N entries of this array define N  1 zones as follows:

         Zone 0:        0 <= LUX < array[0]
         Zone 1:        array[0] <= LUX < array[1]
         ...
         Zone N:        array[N - 1] <= LUX < array[N]
         Zone N + 1     array[N] <= LUX < infinity

         Must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLevels">
        <item>1</item>
        <item>5</item>
        <item>8</item>
        <item>13</item>
        <item>17</item>
        <item>21</item>
        <item>26</item>
        <item>30</item>
        <item>34</item>
        <item>39</item>
        <item>60</item>
        <item>140</item>
        <item>310</item>
        <item>400</item>
        <item>500</item>
        <item>600</item>
        <item>1000</item>
        <item>1200</item>
        <item>1500</item>
        <item>3000</item>
        <item>3500</item>
        <item>4000</item>
    </integer-array>

    <!-- Array of output values for LCD backlight corresponding to the LUX values
         in the config_autoBrightnessLevels array.  This array should have size one greater
         than the size of the config_autoBrightnessLevels array.
         This must be overridden in platform specific overlays -->
    <integer-array name="config_autoBrightnessLcdBacklightValues">
        <item>2</item>
        <item>3</item>
        <item>8</item>
        <item>10</item>
        <item>12</item>
        <item>15</item>
        <item>17</item>
        <item>24</item>
        <item>30</item>
        <item>30</item>
        <item>44</item>
        <item>45</item>
        <item>48</item>
        <item>55</item>
        <item>64</item>
        <item>66</item>
        <item>69</item>
        <item>84</item>
        <item>93</item>
        <item>105</item>
        <item>200</item>
        <item>240</item>
        <item>255</item>
    </integer-array>

    <!-- Stability requirements in milliseconds for accepting a new brightness level.  This is used
         for debouncing the light sensor.  Different constants are used to debounce the light sensor
         when adapting to brighter or darker environments.  This parameter controls how quickly
         brightness changes occur in response to an observed change in light level that exceeds the
         hysteresis threshold. -->
    <integer name="config_autoBrightnessBrighteningLightDebounce">500</integer>
    <integer name="config_autoBrightnessDarkeningLightDebounce">500</integer>

    <!-- Minimum screen brightness allowed by the power manager. -->
    <integer name="config_screenBrightnessDim">1</integer>

    <!-- Minimum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMinimum">1</integer>

    <!-- Maximum screen brightness setting allowed by the power manager.
         The user is forbidden from setting the brightness below this level. -->
    <integer name="config_screenBrightnessSettingMaximum">255</integer>

    <!-- Default screen brightness setting.
         Must be in the range specified by minimum and maximum. -->
    <integer name="config_screenBrightnessSettingDefault">128</integer>

    <!-- If enabled, capacitive keys will only light up when pressed.
         Otherwise, the buttons will light up whenever the user interacts with the device -->
    <bool name="config_buttonLightOnKeypressOnly">true</bool>

    <!-- Vibrator pattern for feedback about a long screen/key press -->
    <integer-array name="config_longPressVibePattern">
        <item>0</item>
        <item>28</item>
        <item>10</item>
    </integer-array>

    <!-- Vibrator pattern for feedback about touching a virtual key -->
    <integer-array name="config_virtualKeyVibePattern">
        <item>0</item>
        <item>28</item>
        <item>8</item>
    </integer-array>

    <!-- Vibrator pattern for a very short but reliable vibration for soft keyboard tap -->
    <integer-array name="config_keyboardTapVibePattern">
        <item>28</item>
    </integer-array>
</resources>
